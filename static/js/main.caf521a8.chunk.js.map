{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","reverse","setState","sortByLength","LENGTH","sortByAlp","ALPHABET","reset","this","visibleGoods","goods","console","log","getReorderedGoods","sort","firstGood","secondGood","localeCompare","length","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAb,4MACEC,MAAwB,CACtBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBARzB,EAYEG,aAAe,WACb,EAAKD,SAAS,CAAEJ,SAAUJ,EAASU,UAbvC,EAgBEC,UAAY,WACV,EAAKH,SAAS,CAAEJ,SAAUJ,EAASY,YAjBvC,EAoBEC,MAAQ,WACN,EAAKL,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KAvBlB,4CA2BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZS,EAjDH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNS,EAAY,YAAOC,GAMzB,OAFAC,QAAQC,IAAId,EAAUE,GAEfS,EAsCgBI,CAAkBlB,EAAiBa,KAAKX,OAkB7D,OAhBAY,EAAaK,MAAK,SAACC,EAAWC,GAC5B,OAAQlB,GACN,KAAKJ,EAASY,SACZ,OAAOS,EAAUE,cAAcD,GAEjC,KAAKtB,EAASU,OACZ,OAAOW,EAAUG,OAASF,EAAWE,OACvC,QACE,OAAO,MAITlB,GACFS,EAAaR,UAIb,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWrB,IAAaJ,EAASY,SAC7B,iBACA,0BACJe,QAASb,KAAKH,UALhB,iCAUA,wBACEe,KAAK,SACLD,UAAWrB,IAAaJ,EAASU,OAC7B,oBACA,6BACJiB,QAASb,KAAKL,aALhB,4BAUA,wBACEiB,KAAK,SACLD,UAAWnB,EACP,oBACA,6BACJqB,QAASb,KAAKP,QALhB,qBAUCD,GAAcF,IAAaJ,EAASK,KAEjC,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAASb,KAAKD,MAHhB,mBAQA,QAGN,6BACGE,EAAaa,KAAI,SAAAC,GAChB,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eAhGvB,GAAyBC,IAAMC,WC9C/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.caf521a8.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: ReorderOptions = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortByAlp = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    visibleGoods.sort((firstGood, secondGood) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return firstGood.localeCompare(secondGood);\n\n        case SortType.LENGTH:\n          return firstGood.length - secondGood.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.sortByAlp}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isReversed || sortType !== SortType.NONE\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )\n            : null}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => {\n            return (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}